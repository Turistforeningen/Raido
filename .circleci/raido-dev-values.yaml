# Dev values for raido.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: raido
replicaCount: 1
postgres_data_path: "/var/lib/postgresql/data"

image:
  raido_v1:
    repository: eu.gcr.io/dnt-docker-registry-public/raido
    tag: "latest"
    pullPolicy: IfNotPresent
  raido_v2:
    repository: eu.gcr.io/dnt-docker-registry-public/raido
    tag: "latest"
    pullPolicy: IfNotPresent
  raido_postgres:
    repository: turistforeningen/pgrouting-n50
    tag: "16-06-14"
    pullPolicy: IfNotPresent

# pod autoscaling
# for autoscaling to work you must specify cpu requests for the pods you want to autoscale
autoscaling:
  v1:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
  v2:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80

# pod disruption budget
disruptionBudget:
  v1:
    enabled: false
    minAvailable: 1 
  v2:
    enabled: false
    minAvailable: 1

environment:
  raido_v1:
    CORS_ALLOW_ORIGINS: "tur.app.dnt.no,tur.app.dnt.privat,tur.app.dnt.local"
    CORS_EXPOSE_HEADERS: x-response-time
    FORCE_SSL: true
    HSTS_MAX_AGE: 31536000
    NEW_RELIC_APP_NAME: Raido
    NEW_RELIC_LICENSE_KEY: ""
    NEW_RELIC_LOG: stdout
    NEW_RELIC_NO_CONFIG_FILE: true
    NODE_ENV: production
    VIRTUAL_HOST: "http://raido.app.dnt.no/v1/*,https://raido.app.dnt.no/v1/*"
    VIRTUAL_HOST_WEIGHT: 20
    VIRTUAL_PATH: /v1
    VIRTUAL_PORT: 8080
  raido_v2:
    CORS_ALLOW_ORIGINS: "tur.app.dnt.no,tur.app.dnt.privat,tur.app.dnt.local,turistforeningen.github.io,localhost,null"
    CORS_EXPOSE_HEADERS: x-response-time
    FORCE_SSL: true
    HSTS_MAX_AGE: 31536000
    NEW_RELIC_APP_NAME: Raido
    NEW_RELIC_LICENSE_KEY: ""
    NEW_RELIC_LOG: stdout
    NEW_RELIC_NO_CONFIG_FILE: true
    NODE_ENV: production
    VIRTUAL_HOST: "http://raido.app.dnt.no/v2/*,https://raido.app.dnt.no/v2/*"
    VIRTUAL_HOST_WEIGHT: 20
    VIRTUAL_PATH: /v2
    VIRTUAL_PORT: 8080


service:
  raido_v1:
    type: ClusterIP
    port: 8080
  raido_v2:
    type: ClusterIP
    port: 8080
  raido_postgres:
    type: ClusterIP
    port: 5432

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - raido.dev.dnt.org

  tls:
   - secretName: dev-beta-dnt-org-tls
     hosts:
       - raido.dev.dnt.org

cert:
  enabled: false
  issuer: "letsencrypt-production"

raido_v1_resources: 
# limits:
#   cpu: 100m
#   memory: 128Mi
  # requests:
  #   cpu: 70m
  #   memory: 128Mi

raido_v2_resources: 
# limits:
#   cpu: 100m
#   memory: 128Mi
  # requests:
  #   cpu: 70m
  #   memory: 128Mi

raido_postgres_resources: 
# limits:
#   cpu: 100m
#   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}